webpackJsonp([3,0],{0:function(t,a,c){try{(function(){"use strict";function t(t){return t&&t.__esModule?t:{default:t}}var a=c(48);t(a),$.ajax({url:"/api/getlist.do"}).done(function(t,a,c){t=JSON.parse(t),t.status===!0?new PNotify({title:"成功",text:"配置已保存",opacity:"1",type:"success",addclass:"stack_top_right",delay:1400}):new PNotify({title:"失败",text:"配置未保存",opacity:"1",type:"danger",addclass:"stack_top_right",delay:1400})})}).call(this)}finally{}},48:function(t,a,c){try{(function(){"use strict";Mock.mock("http://g.cn",{"data|1-10":[{"id|+1":1}]}),Mock.mock("http://a.cn",{"status|1":!0,msg:"成功","data|1-12":[{"id|+1":1}]}),Mock.mock("http://a.cn/api/getlist.do",{"status|1":!0,msg:"成功1111","data|1-12":[{"id|+1":1}]})}).call(this)}finally{}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,